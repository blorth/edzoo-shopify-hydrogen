{
  "version": 3,
  "sources": ["../../../../app/components/ProductCard.tsx"],
  "sourcesContent": ["import {Button} from '@nextui-org/button';\nimport {Image, Money} from '@shopify/hydrogen';\nimport cx from 'classnames';\nimport React from 'react';\n\nexport enum CardModeEnum {\n  QUANTITY = 'QUANTITY',\n  SINGLE_ADD = 'SINGLE_ADD',\n}\n\nexport enum QuantityActionsEnum {\n  ADD = 'ADD',\n  MINUS = 'MINUS',\n}\n\ntype ProductCardProps = {\n  product: {\n    availableForSale: boolean;\n    description: string;\n    handle: string;\n    id: string;\n    productType: string;\n    title: string;\n    images: {\n      nodes: {\n        id: string;\n        url: string;\n        altText: string;\n        width: number;\n        height: number;\n      }[];\n    };\n    featuredImage: {\n      id: string;\n      url: string;\n      altText: string;\n      width: number;\n      height: number;\n    };\n    priceRange: {\n      maxVariantPrice: {\n        amount: string;\n        currencyCode: string;\n      };\n      minVariantPrice: {\n        amount: string;\n        currencyCode: string;\n      };\n    };\n  };\n  isSelected?: boolean;\n  onSelect: (product: any, quantityAction?: QuantityActionsEnum) => void;\n  showPurchaseType?: boolean;\n  cardMode?: CardModeEnum;\n  quantity?: number;\n};\n\nconst ProductCard: React.FC<ProductCardProps> = ({\n  isSelected,\n  onSelect,\n  product,\n  showPurchaseType,\n  cardMode = CardModeEnum.SINGLE_ADD,\n  quantity,\n}) => {\n  const inStock = true;\n\n  const productCx = cx('ProductCard md:w-[250px] w-full rounded-md bg-white', {\n    'border-2 border-greens-green-primary': isSelected,\n  });\n\n  const soldOutDivCx = cx(\n    'out-of-stock bg-reds-red-light text-white text-xs font-semibold uppercase',\n    'tracking-wider rounded-[4px] text-center p-2 absolute top-[30%] left-[20%] rotate-[10deg]',\n    'font-volkhov',\n    {\n      block: !inStock,\n      hidden: inStock,\n    },\n  );\n\n  const handleOnSelect = (quantityAction?: QuantityActionsEnum) => {\n    onSelect(product, quantityAction);\n  };\n\n  return (\n    <div className={productCx}>\n      {isSelected && (\n        <div className=\"current-selection bg-greens-green-primary text-white text-center font-bold font-volkhov p-2\">\n          Current Selection\n        </div>\n      )}\n      <div className=\"flex flex-row md:flex-col pr-5 md:px-5 pb-5 pt-11 items-center justify-center gap-1\">\n        <div className=\"relative min-w-[160px] max-w-[160px]\">\n          <Image\n            data={product.featuredImage}\n            aspectRatio=\"1/1\"\n            sizes=\"(min-width: 160px, max-width: 160px)\"\n            className={inStock ? 'opacity-100' : 'opacity-50'}\n          />\n          <div className={soldOutDivCx}>Sold Out!</div>\n        </div>\n\n        <div className=\"metadata flex flex-col md:justify-center md:items-center lg:mt-5 gap-1\">\n          <div className=\"font-volkhov text-browns-brown font-bold md:text-center\">\n            {product.title}\n          </div>\n          <div className=\"price flex flex-row gap-2 font-volkhov\">\n            <Money\n              data={product.priceRange.minVariantPrice}\n              className=\"text-light-red font-semibold\"\n            />{' '}\n            /mo{' '}\n            <Money\n              data={product.priceRange.minVariantPrice}\n              className=\"text-neutrals-gray-medium font-semibold line-through\"\n            />\n          </div>\n          {showPurchaseType && (\n            <div className=\"purchaseType bg-light-yellow p-2 rounded-sm text-center text-sm\">\n              Bills and ships monthly\n            </div>\n          )}\n          {CardModeEnum.SINGLE_ADD && (\n            <div className=\"mt-4\">\n              {inStock ? (\n                <Button\n                  color=\"primary\"\n                  className=\"font-volkhov rounded-sm font-semibold tracking-wide uppercase px-[30px]\"\n                  onClick={() => handleOnSelect()}\n                >\n                  + Add\n                </Button>\n              ) : (\n                <Button\n                  color=\"secondary\"\n                  className=\"font-volkhov rounded-sm font-semibold tracking-wide uppercase px-[30px]\"\n                >\n                  Join The Waitlist\n                </Button>\n              )}\n            </div>\n          )}\n\n          {cardMode === CardModeEnum.QUANTITY && quantity && quantity === 0 && (\n            <div className=\"mt-4\">\n              <Button\n                color=\"primary\"\n                className=\"font-volkhov rounded-sm font-semibold tracking-wide uppercase px-[30px]\"\n                onClick={() => handleOnSelect(QuantityActionsEnum.ADD)}\n              >\n                + Add\n              </Button>\n            </div>\n          )}\n\n          {cardMode === CardModeEnum.QUANTITY && quantity && quantity >= 1 && (\n            <div className=\"mt-4\">\n              <div>\n                <Button\n                  color=\"primary\"\n                  className=\"font-volkhov rounded-sm font-semibold tracking-wide uppercase px-[30px]\"\n                  onClick={() => handleOnSelect(QuantityActionsEnum.MINUS)}\n                >\n                  -\n                </Button>\n                <div className=\"\">{quantity}</div>\n                <Button\n                  color=\"primary\"\n                  className=\"font-volkhov rounded-sm font-semibold tracking-wide uppercase px-[30px]\"\n                  onClick={() => handleOnSelect(QuantityActionsEnum.ADD)}\n                >\n                  +\n                </Button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n"],
  "mappings": "kjBAEA,IAAAA,EAAe,OAsFPC,EAAA,OA/BR,IAAMC,EAA0C,CAAC,CAC/C,WAAAC,EACA,SAAAC,EACA,QAAAC,EACA,iBAAAC,EACA,SAAAC,EAAW,aACX,SAAAC,CACF,IAAM,CAGJ,IAAMC,KAAY,EAAAC,SAAG,sDAAuD,CAC1E,uCAAwCP,CAC1C,CAAC,EAEKQ,KAAe,EAAAD,SACnB,4EACA,4FACA,eACA,CACE,MAAO,GACP,OAAQ,EACV,CACF,EAEME,EAAkBC,GAAyC,CAC/DT,EAASC,EAASQ,CAAc,CAClC,EAEA,SACE,QAAC,OAAI,UAAWJ,EACb,UAAAN,MACC,OAAC,OAAI,UAAU,8FAA8F,6BAE7G,KAEF,QAAC,OAAI,UAAU,sFACb,qBAAC,OAAI,UAAU,uCACb,oBAACW,EAAA,CACC,KAAMT,EAAQ,cACd,YAAY,MACZ,MAAM,uCACN,UAAqB,cACvB,KACA,OAAC,OAAI,UAAWM,EAAc,qBAAS,GACzC,KAEA,QAAC,OAAI,UAAU,yEACb,oBAAC,OAAI,UAAU,0DACZ,SAAAN,EAAQ,MACX,KACA,QAAC,OAAI,UAAU,yCACb,oBAACU,EAAA,CACC,KAAMV,EAAQ,WAAW,gBACzB,UAAU,+BACZ,EAAG,IAAI,MACH,OACJ,OAACU,EAAA,CACC,KAAMV,EAAQ,WAAW,gBACzB,UAAU,uDACZ,GACF,EACCC,MACC,OAAC,OAAI,UAAU,kEAAkE,mCAEjF,KAGA,OAAC,OAAI,UAAU,OAEX,mBAACU,EAAA,CACC,MAAM,UACN,UAAU,0EACV,QAAS,IAAMJ,EAAe,EAC/B,iBAED,EASJ,EAGDL,IAAa,YAAyBC,GAAYA,IAAa,MAC9D,OAAC,OAAI,UAAU,OACb,mBAACQ,EAAA,CACC,MAAM,UACN,UAAU,0EACV,QAAS,IAAMJ,EAAe,KAAuB,EACtD,iBAED,EACF,EAGDL,IAAa,YAAyBC,GAAYA,GAAY,MAC7D,OAAC,OAAI,UAAU,OACb,oBAAC,OACC,oBAACQ,EAAA,CACC,MAAM,UACN,UAAU,0EACV,QAAS,IAAMJ,EAAe,OAAyB,EACxD,aAED,KACA,OAAC,OAAI,UAAU,GAAI,SAAAJ,EAAS,KAC5B,OAACQ,EAAA,CACC,MAAM,UACN,UAAU,0EACV,QAAS,IAAMJ,EAAe,KAAuB,EACtD,aAED,GACF,EACF,GAEJ,GACF,GACF,CAEJ,EAEOK,EAAQf",
  "names": ["import_classnames", "import_jsx_runtime", "ProductCard", "isSelected", "onSelect", "product", "showPurchaseType", "cardMode", "quantity", "productCx", "cx", "soldOutDivCx", "handleOnSelect", "quantityAction", "Image", "Money", "button_default", "ProductCard_default"]
}
