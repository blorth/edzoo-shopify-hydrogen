{
  "version": 3,
  "sources": ["../../../../node_modules/@nextui-org/button/dist/chunk-BOMWXXSL.mjs", "../../../../node_modules/@nextui-org/button/dist/chunk-SWIMKC2Y.mjs", "../../../../node_modules/@nextui-org/use-aria-button/dist/index.mjs", "../../../../node_modules/framer-motion/dist/es/motion/index.mjs", "../../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs", "../../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs", "../../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs", "../../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs", "../../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs", "../../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs", "../../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs", "../../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs", "../../../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs", "../../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs", "../../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs", "../../../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs", "../../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs", "../../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs", "../../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs", "../../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs", "../../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs", "../../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs", "../../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs", "../../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs", "../../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs", "../../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs", "../../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs", "../../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs", "../../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs", "../../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs", "../../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs", "../../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs", "../../../../node_modules/framer-motion/dist/es/utils/clamp.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/utils.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs", "../../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs", "../../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs", "../../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs", "../../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs", "../../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs", "../../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs", "../../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs", "../../../../node_modules/framer-motion/dist/es/utils/noop.mjs", "../../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs", "../../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs", "../../../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs", "../../../../node_modules/framer-motion/dist/es/events/event-info.mjs", "../../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs", "../../../../node_modules/framer-motion/dist/es/utils/pipe.mjs", "../../../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs", "../../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs", "../../../../node_modules/framer-motion/dist/es/gestures/hover.mjs", "../../../../node_modules/framer-motion/dist/es/gestures/focus.mjs", "../../../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs", "../../../../node_modules/framer-motion/dist/es/gestures/press.mjs", "../../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs", "../../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs", "../../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs", "../../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs", "../../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs", "../../../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs", "../../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs", "../../../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs", "../../../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs", "../../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs", "../../../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs", "../../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs", "../../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs", "../../../../node_modules/framer-motion/dist/es/utils/errors.mjs", "../../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs", "../../../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs", "../../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs", "../../../../node_modules/framer-motion/dist/es/utils/memo.mjs", "../../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs", "../../../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs", "../../../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs", "../../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs", "../../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs", "../../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs", "../../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs", "../../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs", "../../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs", "../../../../node_modules/framer-motion/dist/es/easing/ease.mjs", "../../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs", "../../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs", "../../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs", "../../../../node_modules/framer-motion/dist/es/easing/circ.mjs", "../../../../node_modules/framer-motion/dist/es/easing/back.mjs", "../../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs", "../../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs", "../../../../node_modules/framer-motion/dist/es/utils/progress.mjs", "../../../../node_modules/framer-motion/dist/es/utils/mix/number.mjs", "../../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs", "../../../../node_modules/framer-motion/dist/es/utils/mix/color.mjs", "../../../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs", "../../../../node_modules/framer-motion/dist/es/utils/mix/index.mjs", "../../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs", "../../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs", "../../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs", "../../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs", "../../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs", "../../../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs", "../../../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs", "../../../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs", "../../../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs", "../../../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs", "../../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs", "../../../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs", "../../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs", "../../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs", "../../../../node_modules/framer-motion/dist/es/utils/array.mjs", "../../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs", "../../../../node_modules/framer-motion/dist/es/value/index.mjs", "../../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs", "../../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs", "../../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs", "../../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs", "../../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs", "../../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs", "../../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs", "../../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs", "../../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs", "../../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs", "../../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs", "../../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs", "../../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs", "../../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs", "../../../../node_modules/framer-motion/dist/es/render/store.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs", "../../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs", "../../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs", "../../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/motion-minimal.mjs", "../../../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs", "../../../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs", "../../../../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs", "../../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs", "../../../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs", "../../../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs", "../../../../node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs", "../../../../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs", "../../../../node_modules/@nextui-org/ripple/dist/chunk-UYPFWZFH.mjs", "../../../../node_modules/@nextui-org/ripple/dist/chunk-6NL67ZRH.mjs", "../../../../node_modules/@nextui-org/spinner/dist/chunk-GF2IUMUE.mjs", "../../../../node_modules/@nextui-org/spinner/dist/chunk-TDOFO53L.mjs", "../../../../node_modules/@nextui-org/button/dist/chunk-NXTXE2B3.mjs"],
  "sourcesContent": ["\"use client\";\n\n// src/button-group-context.ts\nimport { createContext } from \"@nextui-org/react-utils\";\nvar [ButtonGroupProvider, useButtonGroupContext] = createContext({\n  name: \"ButtonGroupContext\",\n  strict: false\n});\n\nexport {\n  ButtonGroupProvider,\n  useButtonGroupContext\n};\n", "\"use client\";\nimport {\n  useButtonGroupContext\n} from \"./chunk-BOMWXXSL.mjs\";\n\n// src/use-button.ts\nimport { dataAttr } from \"@nextui-org/shared-utils\";\nimport { useCallback } from \"react\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { chain, mergeProps } from \"@react-aria/utils\";\nimport { useDOMRef, filterDOMProps } from \"@nextui-org/react-utils\";\nimport { button } from \"@nextui-org/theme\";\nimport { isValidElement, cloneElement, useMemo } from \"react\";\nimport { useAriaButton } from \"@nextui-org/use-aria-button\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useRipple } from \"@nextui-org/ripple\";\nfunction useButton(props) {\n  var _a, _b, _c, _d, _e, _f, _g, _h;\n  const groupContext = useButtonGroupContext();\n  const isInGroup = !!groupContext;\n  const {\n    ref,\n    as,\n    children,\n    startContent: startContentProp,\n    endContent: endContentProp,\n    autoFocus,\n    className,\n    spinner,\n    fullWidth = (_a = groupContext == null ? void 0 : groupContext.fullWidth) != null ? _a : false,\n    size = (_b = groupContext == null ? void 0 : groupContext.size) != null ? _b : \"md\",\n    color = (_c = groupContext == null ? void 0 : groupContext.color) != null ? _c : \"default\",\n    variant = (_d = groupContext == null ? void 0 : groupContext.variant) != null ? _d : \"solid\",\n    disableAnimation = (_e = groupContext == null ? void 0 : groupContext.disableAnimation) != null ? _e : false,\n    radius = groupContext == null ? void 0 : groupContext.radius,\n    disableRipple = (_f = groupContext == null ? void 0 : groupContext.disableRipple) != null ? _f : false,\n    isDisabled: isDisabledProp = (_g = groupContext == null ? void 0 : groupContext.isDisabled) != null ? _g : false,\n    isIconOnly = (_h = groupContext == null ? void 0 : groupContext.isIconOnly) != null ? _h : false,\n    isLoading = false,\n    spinnerPlacement = \"start\",\n    onPress,\n    onClick,\n    ...otherProps\n  } = props;\n  const Component = as || \"button\";\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const domRef = useDOMRef(ref);\n  const { isFocusVisible, isFocused, focusProps } = useFocusRing({\n    autoFocus\n  });\n  const isDisabled = isDisabledProp || isLoading;\n  const styles = useMemo(\n    () => button({\n      size,\n      color,\n      variant,\n      radius,\n      fullWidth,\n      isDisabled,\n      isInGroup,\n      disableAnimation,\n      isIconOnly,\n      className\n    }),\n    [\n      size,\n      color,\n      variant,\n      radius,\n      fullWidth,\n      isDisabled,\n      isInGroup,\n      isIconOnly,\n      disableAnimation,\n      className\n    ]\n  );\n  const { onClick: onRippleClickHandler, onClear: onClearRipple, ripples } = useRipple();\n  const handleClick = useCallback(\n    (e) => {\n      if (disableRipple || isDisabled || disableAnimation)\n        return;\n      domRef.current && onRippleClickHandler(e);\n    },\n    [disableRipple, isDisabled, disableAnimation, domRef, onRippleClickHandler]\n  );\n  const { buttonProps: ariaButtonProps, isPressed } = useAriaButton(\n    {\n      elementType: as,\n      isDisabled,\n      onPress,\n      onClick: chain(onClick, handleClick),\n      ...otherProps\n    },\n    domRef\n  );\n  const { isHovered, hoverProps } = useHover({ isDisabled });\n  const getButtonProps = useCallback(\n    (props2 = {}) => ({\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-pressed\": dataAttr(isPressed),\n      \"data-focus-visible\": dataAttr(isFocusVisible),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-loading\": dataAttr(isLoading),\n      ...mergeProps(\n        ariaButtonProps,\n        focusProps,\n        hoverProps,\n        filterDOMProps(otherProps, {\n          enabled: shouldFilterDOMProps\n        }),\n        filterDOMProps(props2)\n      )\n    }),\n    [\n      isLoading,\n      isDisabled,\n      isFocused,\n      isPressed,\n      shouldFilterDOMProps,\n      isFocusVisible,\n      isHovered,\n      ariaButtonProps,\n      focusProps,\n      hoverProps,\n      otherProps\n    ]\n  );\n  const getIconClone = (icon) => isValidElement(icon) ? cloneElement(icon, {\n    \"aria-hidden\": true,\n    focusable: false,\n    tabIndex: -1\n  }) : null;\n  const startContent = getIconClone(startContentProp);\n  const endContent = getIconClone(endContentProp);\n  const spinnerSize = useMemo(() => {\n    const buttonSpinnerSizeMap = {\n      sm: \"sm\",\n      md: \"sm\",\n      lg: \"md\"\n    };\n    return buttonSpinnerSizeMap[size];\n  }, [size]);\n  const getRippleProps = useCallback(\n    () => ({ ripples, onClear: onClearRipple }),\n    [ripples, onClearRipple]\n  );\n  return {\n    Component,\n    children,\n    domRef,\n    spinner,\n    styles,\n    startContent,\n    endContent,\n    isLoading,\n    spinnerPlacement,\n    spinnerSize,\n    disableRipple,\n    getButtonProps,\n    getRippleProps,\n    isIconOnly\n  };\n}\n\nexport {\n  useButton\n};\n", "// src/index.ts\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { usePress } from \"@react-aria/interactions\";\nfunction useAriaButton(props, ref) {\n  let {\n    elementType = \"button\",\n    isDisabled,\n    onPress,\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    preventFocusOnPress,\n    allowFocusWhenDisabled,\n    onClick: deprecatedOnClick,\n    href,\n    target,\n    rel,\n    type = \"button\",\n    allowTextSelectionOnPress\n  } = props;\n  let additionalProps;\n  if (elementType === \"button\") {\n    additionalProps = {\n      type,\n      disabled: isDisabled\n    };\n  } else {\n    additionalProps = {\n      role: \"button\",\n      tabIndex: isDisabled ? void 0 : 0,\n      href: elementType === \"a\" && isDisabled ? void 0 : href,\n      target: elementType === \"a\" ? target : void 0,\n      type: elementType === \"input\" ? type : void 0,\n      disabled: elementType === \"input\" ? isDisabled : void 0,\n      \"aria-disabled\": !isDisabled || elementType === \"input\" ? void 0 : isDisabled,\n      rel: elementType === \"a\" ? rel : void 0\n    };\n  }\n  let { pressProps, isPressed } = usePress({\n    onPressStart,\n    onPressEnd,\n    onPressChange,\n    onPress,\n    isDisabled,\n    preventFocusOnPress,\n    allowTextSelectionOnPress,\n    ref\n  });\n  let { focusableProps } = useFocusable(props, ref);\n  if (allowFocusWhenDisabled) {\n    focusableProps.tabIndex = isDisabled ? -1 : focusableProps.tabIndex;\n  }\n  let buttonProps = mergeProps(\n    focusableProps,\n    pressProps,\n    filterDOMProps(props, { labelable: true })\n  );\n  return {\n    isPressed,\n    buttonProps: mergeProps(additionalProps, buttonProps, {\n      \"aria-haspopup\": props[\"aria-haspopup\"],\n      \"aria-expanded\": props[\"aria-expanded\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-pressed\": props[\"aria-pressed\"],\n      onClick: (e) => {\n        deprecatedOnClick == null ? void 0 : deprecatedOnClick(e);\n      }\n    })\n  };\n}\nexport {\n  useAriaButton\n};\n", "import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n", "import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n", "import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n", "import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        microtask.postRender(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n", "import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n", "import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n", "const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n", "import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n", "/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n", "import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n", "const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n", "class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                    callback(frameData);\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n", "import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => {\n        steps[stepId].process(state);\n    };\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n", "import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n", "import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n", "function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n", "import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n", "/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n", "function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n", "const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n", "import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n", "import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n", "const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n", "import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n", "import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n", "import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n", "const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n", "import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n", "/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n", "import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n", "import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n", "import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n", "const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n", "/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n", "import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n", "const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n", "import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n", "const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n", "/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n", "const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n", "import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n", "/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n", "import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n", "import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n", "import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n", "import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n", "const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n", "/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n", "import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n", "import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n", "import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n", "import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n", "import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n", "import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n", "const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n", "function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n", "/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n", "import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n", "import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n", "import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n", "import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n", "function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n", "import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n", "const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n", "import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n", "import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n", "const noop = (any) => any;\n\nexport { noop };\n", "import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n", "import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n", "import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n", "import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n", "function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n", "const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n", "import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n", "import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n", "/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n", "function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n", "class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n", "import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback)\n            callback(event, info);\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n", "import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n", "/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n", "import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap)\n                            onTap(event, info);\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            onTapStart(event, info);\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel)\n            onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n", "/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n", "import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n", "import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n", "function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n", "import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n", "/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n", "import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n", "/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n", "const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n", "const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n", "import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n", "/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n", "import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n", "import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n", "/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n", "import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n", "import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n", "/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n", "/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n", "import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n", "import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n", "import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n", "import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n", "import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n", "import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n", "import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n", "import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n", "import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n", "import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n", "import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n", "import { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        if (typeof unresolvedKeyframes[i] === \"string\" &&\n            unresolvedKeyframes[i] !== \"none\" &&\n            unresolvedKeyframes[i] !== \"0\") {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n", "import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            const keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\" && isCSSVariableToken(keyframe)) {\n                const resolved = getVariableValue(keyframe, element.current);\n                if (resolved !== undefined) {\n                    unresolvedKeyframes[i] = resolved;\n                }\n                if (i === unresolvedKeyframes.length - 1) {\n                    this.finalKeyframe = keyframe;\n                }\n            }\n        }\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return this.resolveNoneKeyframes();\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n", "function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n", "import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * \u2705: 100, \"100px\", \"#fff\"\n * \u274C: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n", "import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n", "import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n", "/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n", "import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n", "import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n", "import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n", "import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n", "import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Ga\u00EBtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n", "import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n", "const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n", "// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n", "// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n", "import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n", "import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n", "import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n", "import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n", "/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n", "/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n", "// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n", "import { mixNumber } from './number.mjs';\nimport { invariant } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n", "import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\n\nfunction mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n", "import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n", "import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n", "import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n", "import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n", "function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n", "import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n", "/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n", "import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n", "import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n", "const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n", "import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n", "import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n", "import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (options.type === \"spring\" ||\n        options.name === \"backgroundColor\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n", "import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n", "import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n", "function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n", "import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n", "import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.1.7\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n", "import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n", "import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const props = visualElement.getProps();\n            const appearId = props[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n                animation.then(() => willChange.remove(key));\n            }\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n", "import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n", "import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        frame.postRender(() => {\n            visualElement.notify(\"AnimationComplete\", definition);\n        });\n    });\n}\n\nexport { animateVisualElement };\n", "import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n", "import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n", "import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n", "import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n", "const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n", "/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n", "import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n", "import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n            enableHardwareAcceleration: true,\n        });\n};\n\nexport { createDomVisualElement };\n", "// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n", "import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n", "import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.1.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.1.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n", "const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n", "import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n", "import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        var _a;\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            (_a = this.features[key]) === null || _a === void 0 ? void 0 : _a.unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, getClosestProjectingNode(this.parent));\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n", "import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n", "import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n", "import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n", "import { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\n\n/**\n * @public\n */\nconst m = createMotionProxy(createDomMotionConfig);\n\nexport { m };\n", "import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\nimport { invariant } from '../../utils/errors.mjs';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction updateChildLookup(children, allChildren) {\n    children.forEach((child) => {\n        const key = getChildKey(child);\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, custom, initial = true, onExitComplete, exitBeforeEnter, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    const forceRender = useContext(LayoutGroupContext).forceRender || useForceUpdate()[0];\n    const isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    const filteredChildren = onlyElements(children);\n    let childrenToRender = filteredChildren;\n    const exitingChildren = useRef(new Map()).current;\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    const presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    const allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    const isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(() => {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exitingChildren.clear();\n    });\n    if (isInitialRender.current) {\n        return (jsx(Fragment, { children: childrenToRender.map((child) => (jsx(PresenceChild, { isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)))) }));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = [...childrenToRender];\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    const presentKeys = presentChildren.current.map(getChildKey);\n    const targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    const numPresent = presentKeys.length;\n    for (let i = 0; i < numPresent; i++) {\n        const key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1 && !exitingChildren.has(key)) {\n            exitingChildren.set(key, undefined);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (mode === \"wait\" && exitingChildren.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exitingChildren.forEach((component, key) => {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        const child = allChildren.get(key);\n        if (!child)\n            return;\n        const insertionIndex = presentKeys.indexOf(key);\n        let exitingComponent = component;\n        if (!exitingComponent) {\n            const onExit = () => {\n                // clean up the exiting children map\n                exitingChildren.delete(key);\n                // compute the keys of children that were rendered once but are no longer present\n                // this could happen in case of too many fast consequent renderings\n                // @link https://github.com/framer/motion/issues/2023\n                const leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));\n                // clean up the all children map\n                leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey));\n                // make sure to render only the children that are actually visible\n                presentChildren.current = filteredChildren.filter((presentChild) => {\n                    const presentChildKey = getChildKey(presentChild);\n                    return (\n                    // filter out the node exiting\n                    presentChildKey === key ||\n                        // filter out the leftover children\n                        leftOverKeys.includes(presentChildKey));\n                });\n                // Defer re-rendering until all exiting children have indeed left\n                if (!exitingChildren.size) {\n                    if (isMounted.current === false)\n                        return;\n                    forceRender();\n                    onExitComplete && onExitComplete();\n                }\n            };\n            exitingComponent = (jsx(PresenceChild, { isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n            exitingChildren.set(key, exitingComponent);\n        }\n        childrenToRender.splice(insertionIndex, 0, exitingComponent);\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map((child) => {\n        const key = child.key;\n        return exitingChildren.has(key) ? (child) : (jsx(PresenceChild, { isPresent: true, presenceAffectsLayout: presenceAffectsLayout, mode: mode, children: child }, getChildKey(child)));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        childrenToRender.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    return (jsx(Fragment, { children: exitingChildren.size\n            ? childrenToRender\n            : childrenToRender.map((child) => cloneElement(child)) }));\n};\n\nexport { AnimatePresence };\n", "import { useState, useCallback } from 'react';\nimport { useIsMounted } from './use-is-mounted.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction useForceUpdate() {\n    const isMounted = useIsMounted();\n    const [forcedRenderCount, setForcedRenderCount] = useState(0);\n    const forceRender = useCallback(() => {\n        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);\n    }, [forcedRenderCount]);\n    /**\n     * Defer this to the end of the next animation frame in case there are multiple\n     * synchronous calls.\n     */\n    const deferredForceRender = useCallback(() => frame.postRender(forceRender), [forceRender]);\n    return [deferredForceRender, forcedRenderCount];\n}\n\nexport { useForceUpdate };\n", "import { useRef } from 'react';\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-effect.mjs';\n\nfunction useIsMounted() {\n    const isMounted = useRef(false);\n    useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n            isMounted.current = false;\n        };\n    }, []);\n    return isMounted;\n}\n\nexport { useIsMounted };\n", "import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n", "import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n", "import { useEffect } from 'react';\n\nfunction useUnmountEffect(callback) {\n    return useEffect(() => () => callback(), []);\n}\n\nexport { useUnmountEffect };\n", "import { jsx } from 'react/jsx-runtime';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (jsx(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict }, children: children }));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n", "import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n", "\"use client\";\n\n// src/ripple.tsx\nimport { AnimatePresence, m, LazyMotion, domAnimation } from \"framer-motion\";\nimport { clamp } from \"@nextui-org/shared-utils\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nvar Ripple = (props) => {\n  const { ripples = [], motionProps, color = \"currentColor\", style, onClear } = props;\n  return /* @__PURE__ */ jsx(Fragment, { children: ripples.map((ripple) => {\n    const duration = clamp(0.01 * ripple.size, 0.2, ripple.size > 100 ? 0.75 : 0.5);\n    return /* @__PURE__ */ jsx(AnimatePresence, { mode: \"popLayout\", children: /* @__PURE__ */ jsx(Fragment, { children: /* @__PURE__ */ jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsx(\n      m.span,\n      {\n        animate: { transform: \"scale(2)\", opacity: 0 },\n        className: \"nextui-ripple\",\n        exit: { opacity: 0 },\n        initial: { transform: \"scale(0)\", opacity: 0.35 },\n        style: {\n          position: \"absolute\",\n          backgroundColor: color,\n          borderRadius: \"100%\",\n          transformOrigin: \"center\",\n          pointerEvents: \"none\",\n          overflow: \"hidden\",\n          inset: 0,\n          zIndex: 0,\n          top: ripple.y,\n          left: ripple.x,\n          width: `${ripple.size}px`,\n          height: `${ripple.size}px`,\n          ...style\n        },\n        transition: { duration },\n        onAnimationComplete: () => {\n          onClear(ripple.key);\n        },\n        ...motionProps\n      }\n    ) }) }) }, ripple.key);\n  }) });\n};\nRipple.displayName = \"NextUI.Ripple\";\nvar ripple_default = Ripple;\n\nexport {\n  ripple_default\n};\n", "\"use client\";\n\n// src/use-ripple.ts\nimport { getUniqueID } from \"@nextui-org/shared-utils\";\nimport { useCallback, useState } from \"react\";\nfunction useRipple(props = {}) {\n  const [ripples, setRipples] = useState([]);\n  const onClick = useCallback((event) => {\n    const trigger = event.currentTarget;\n    const size = Math.max(trigger.clientWidth, trigger.clientHeight);\n    const rect = trigger.getBoundingClientRect();\n    setRipples((prevRipples) => [\n      ...prevRipples,\n      {\n        key: getUniqueID(prevRipples.length.toString()),\n        size,\n        x: event.clientX - rect.left - size / 2,\n        y: event.clientY - rect.top - size / 2\n      }\n    ]);\n  }, []);\n  const onClear = useCallback((key) => {\n    setRipples((prevState) => prevState.filter((ripple) => ripple.key !== key));\n  }, []);\n  return { ripples, onClick, onClear, ...props };\n}\n\nexport {\n  useRipple\n};\n", "// src/use-spinner.ts\nimport { mapPropsVariants } from \"@nextui-org/system-rsc\";\nimport { spinner } from \"@nextui-org/theme\";\nimport { clsx, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { useMemo, useCallback } from \"react\";\nfunction useSpinner(originalProps) {\n  const [props, variantProps] = mapPropsVariants(originalProps, spinner.variantKeys);\n  const { children, className, classNames, label: labelProp, ...otherProps } = props;\n  const slots = useMemo(() => spinner({ ...variantProps }), [objectToDeps(variantProps)]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const label = labelProp || children;\n  const ariaLabel = useMemo(() => {\n    if (label && typeof label === \"string\") {\n      return label;\n    }\n    return !otherProps[\"aria-label\"] ? \"Loading\" : \"\";\n  }, [children, label, otherProps[\"aria-label\"]]);\n  const getSpinnerProps = useCallback(\n    () => ({\n      \"aria-label\": ariaLabel,\n      className: slots.base({\n        class: baseStyles\n      }),\n      ...otherProps\n    }),\n    [ariaLabel, slots, baseStyles, otherProps]\n  );\n  return { label, slots, classNames, getSpinnerProps };\n}\n\nexport {\n  useSpinner\n};\n", "import {\n  useSpinner\n} from \"./chunk-GF2IUMUE.mjs\";\n\n// src/spinner.tsx\nimport { forwardRef } from \"@nextui-org/system-rsc\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Spinner = forwardRef((props, ref) => {\n  const { slots, classNames, label, getSpinnerProps } = useSpinner({ ...props });\n  return /* @__PURE__ */ jsxs(\"div\", { ref, ...getSpinnerProps(), children: [\n    /* @__PURE__ */ jsxs(\"div\", { className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }), children: [\n      /* @__PURE__ */ jsx(\"i\", { className: slots.circle1({ class: classNames == null ? void 0 : classNames.circle1 }) }),\n      /* @__PURE__ */ jsx(\"i\", { className: slots.circle2({ class: classNames == null ? void 0 : classNames.circle2 }) })\n    ] }),\n    label && /* @__PURE__ */ jsx(\"span\", { className: slots.label({ class: classNames == null ? void 0 : classNames.label }), children: label })\n  ] });\n});\nSpinner.displayName = \"NextUI.Spinner\";\nvar spinner_default = Spinner;\n\nexport {\n  spinner_default\n};\n", "\"use client\";\nimport {\n  useButton\n} from \"./chunk-SWIMKC2Y.mjs\";\n\n// src/button.tsx\nimport { Spinner } from \"@nextui-org/spinner\";\nimport { Ripple } from \"@nextui-org/ripple\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Button = forwardRef((props, ref) => {\n  const {\n    Component,\n    domRef,\n    children,\n    styles,\n    spinnerSize,\n    spinner = /* @__PURE__ */ jsx(Spinner, { color: \"current\", size: spinnerSize }),\n    spinnerPlacement,\n    startContent,\n    endContent,\n    isLoading,\n    disableRipple,\n    getButtonProps,\n    getRippleProps,\n    isIconOnly\n  } = useButton({ ...props, ref });\n  return /* @__PURE__ */ jsxs(Component, { ref: domRef, className: styles, ...getButtonProps(), children: [\n    startContent,\n    isLoading && spinnerPlacement === \"start\" && spinner,\n    isLoading && isIconOnly ? null : children,\n    isLoading && spinnerPlacement === \"end\" && spinner,\n    endContent,\n    !disableRipple && /* @__PURE__ */ jsx(Ripple, { ...getRippleProps() })\n  ] });\n});\nButton.displayName = \"NextUI.Button\";\nvar button_default = Button;\n\nexport {\n  button_default\n};\n"],
  "mappings": "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",
  "names": ["ButtonGroupProvider", "useButtonGroupContext", "createContext2", "import_react", "import_react", "useAriaButton", "props", "ref", "elementType", "isDisabled", "onPress", "onPressStart", "onPressEnd", "onPressChange", "preventFocusOnPress", "allowFocusWhenDisabled", "deprecatedOnClick", "href", "target", "rel", "type", "allowTextSelectionOnPress", "additionalProps", "pressProps", "isPressed", "$f6c31cce2adf654f$export$45712eceda6fad21", "focusableProps", "$e6afbd83fe6ebbd2$export$4c014de7c8940b4c", "buttonProps", "$3ef42575df84b30b$export$9d1611c77c2fe928", "$65484d02dcb7eb3e$export$457c3d6518dd4c6f", "e", "import_jsx_runtime", "import_react", "import_react", "MotionConfigContext", "p", "import_react", "MotionContext", "import_react", "import_react", "PresenceContext", "import_react", "isBrowser", "useIsomorphicLayoutEffect", "isBrowser", "import_react", "LazyContext", "camelToDash", "str", "optimizedAppearDataId", "optimizedAppearDataAttribute", "camelToDash", "MotionGlobalConfig", "Queue", "process", "index", "createRenderStep", "runNextFrame", "thisFrame", "nextFrame", "numToRun", "isProcessing", "flushNextFrame", "toKeepAlive", "step", "callback", "keepAlive", "immediate", "addToCurrentFrame", "queue", "frameData", "i", "stepsOrder", "maxElapsed", "createRenderBatcher", "scheduleNextBatch", "allowKeepAlive", "runNextFrame", "useDefaultElapsed", "state", "steps", "acc", "key", "createRenderStep", "processStep", "stepId", "processBatch", "timestamp", "MotionGlobalConfig", "wake", "step", "process", "keepAlive", "immediate", "microtask", "cancelMicrotask", "createRenderBatcher", "useVisualElement", "Component", "visualState", "props", "createVisualElement", "parent", "MotionContext", "lazyContext", "LazyContext", "presenceContext", "PresenceContext", "reducedMotionConfig", "MotionConfigContext", "visualElementRef", "visualElement", "wantsHandoff", "optimizedAppearDataAttribute", "useIsomorphicLayoutEffect", "microtask", "import_react", "isRefObject", "ref", "useMotionRef", "visualState", "visualElement", "externalRef", "instance", "isRefObject", "import_react", "isVariantLabel", "v", "isAnimationControls", "v", "variantPriorityOrder", "variantProps", "isControllingVariants", "props", "isAnimationControls", "variantProps", "name", "isVariantLabel", "isVariantNode", "getCurrentTreeVariants", "props", "context", "isControllingVariants", "initial", "animate", "isVariantLabel", "useCreateMotionContext", "props", "initial", "animate", "getCurrentTreeVariants", "MotionContext", "variantLabelsAsDependency", "prop", "featureProps", "featureDefinitions", "key", "props", "name", "loadFeatures", "features", "key", "featureDefinitions", "import_react", "LayoutGroupContext", "import_react", "SwitchLayoutGroupContext", "motionComponentSymbol", "createMotionComponent", "preloadedFeatures", "createVisualElement", "useRender", "useVisualState", "Component", "loadFeatures", "MotionComponent", "props", "externalRef", "MeasureLayout", "configAndProps", "MotionConfigContext", "useLayoutId", "isStatic", "context", "useCreateMotionContext", "visualState", "isBrowser", "useVisualElement", "initialLayoutGroupConfig", "SwitchLayoutGroupContext", "isStrict", "LazyContext", "MotionContext", "useMotionRef", "ForwardRefComponent", "motionComponentSymbol", "layoutId", "layoutGroupId", "LayoutGroupContext", "createMotionProxy", "createConfig", "custom", "Component", "customMotionComponentConfig", "createMotionComponent", "componentCache", "_target", "key", "lowercaseSVGElements", "isSVGComponent", "Component", "lowercaseSVGElements", "import_react", "import_react", "scaleCorrectors", "transformPropOrder", "transformProps", "isForcedMotionValue", "key", "layout", "layoutId", "transformProps", "scaleCorrectors", "isMotionValue", "value", "translateAlias", "numTransforms", "transformPropOrder", "buildTransform", "transform", "enableHardwareAcceleration", "allowTransformNone", "transformIsDefault", "transformTemplate", "transformString", "i", "key", "transformName", "checkStringStartsWith", "token", "key", "isCSSVariableName", "startsAsVariableToken", "isCSSVariableToken", "value", "singleCssVariableRegex", "getValueAsType", "value", "type", "clamp", "min", "max", "v", "number", "v", "alpha", "clamp", "scale", "sanitize", "v", "floatRegex", "colorRegex", "singleColorRegex", "isString", "createUnitType", "unit", "v", "isString", "degrees", "percent", "px", "vh", "vw", "progressPercentage", "int", "number", "numberValueTypes", "px", "degrees", "scale", "alpha", "progressPercentage", "int", "buildHTMLStyles", "state", "latestValues", "options", "transformTemplate", "style", "vars", "transform", "transformOrigin", "hasTransform", "hasTransformOrigin", "transformIsNone", "key", "value", "isCSSVariableName", "valueType", "numberValueTypes", "valueAsType", "getValueAsType", "transformProps", "buildTransform", "originX", "originY", "originZ", "createHtmlRenderState", "copyRawValuesOnly", "target", "source", "props", "key", "isMotionValue", "isForcedMotionValue", "useInitialMotionValues", "transformTemplate", "visualState", "isStatic", "state", "createHtmlRenderState", "buildHTMLStyles", "useStyle", "styleProp", "style", "useHTMLProps", "htmlProps", "validMotionProps", "isValidMotionProp", "key", "shouldForward", "key", "isValidMotionProp", "loadExternalIsValidProp", "isValidProp", "filterProps", "props", "isDom", "forwardMotionProps", "filteredProps", "import_react", "calcOrigin", "origin", "offset", "size", "px", "calcSVGTransformOrigin", "dimensions", "originX", "originY", "pxOriginX", "pxOriginY", "dashKeys", "camelKeys", "buildSVGPath", "attrs", "length", "spacing", "offset", "useDashCase", "keys", "px", "pathLength", "pathSpacing", "buildSVGAttrs", "state", "attrX", "attrY", "attrScale", "originX", "originY", "pathLength", "pathSpacing", "pathOffset", "latest", "options", "isSVGTag", "transformTemplate", "buildHTMLStyles", "attrs", "style", "dimensions", "calcSVGTransformOrigin", "buildSVGPath", "createSvgRenderState", "createHtmlRenderState", "isSVGTag", "tag", "useSVGProps", "props", "visualState", "_isStatic", "Component", "visualProps", "state", "createSvgRenderState", "buildSVGAttrs", "isSVGTag", "rawStyles", "copyRawValuesOnly", "createUseRender", "forwardMotionProps", "Component", "props", "ref", "latestValues", "isStatic", "visualProps", "isSVGComponent", "useSVGProps", "useHTMLProps", "filteredProps", "filterProps", "elementProps", "children", "renderedChildren", "isMotionValue", "renderHTML", "element", "style", "vars", "styleProp", "projection", "key", "camelCaseAttributes", "renderSVG", "element", "renderState", "_styleProp", "projection", "renderHTML", "key", "camelCaseAttributes", "camelToDash", "scrapeMotionValuesFromProps", "props", "prevProps", "visualElement", "_a", "style", "newValues", "key", "isMotionValue", "isForcedMotionValue", "scrapeMotionValuesFromProps", "props", "prevProps", "visualElement", "newValues", "key", "isMotionValue", "targetKey", "transformPropOrder", "import_react", "resolveVariantFromProps", "props", "definition", "custom", "currentValues", "currentVelocity", "import_react", "useConstant", "init", "ref", "isKeyframesTarget", "v", "isCustomValue", "v", "resolveFinalValueInKeyframes", "isKeyframesTarget", "resolveMotionValue", "value", "unwrappedValue", "isMotionValue", "isCustomValue", "makeState", "scrapeMotionValuesFromProps", "createRenderState", "onMount", "props", "context", "presenceContext", "state", "makeLatestValues", "instance", "makeUseVisualState", "config", "isStatic", "MotionContext", "PresenceContext", "make", "useConstant", "scrapeMotionValues", "values", "motionValues", "key", "resolveMotionValue", "initial", "animate", "isControllingVariants$1", "isControllingVariants", "isVariantNode$1", "isVariantNode", "isInitialAnimationBlocked", "variantToSet", "isAnimationControls", "definition", "resolved", "resolveVariantFromProps", "transitionEnd", "transition", "target", "valueTarget", "index", "noop", "any", "frame", "cancelFrame", "frameData", "steps", "createRenderBatcher", "noop", "svgMotionConfig", "makeUseVisualState", "scrapeMotionValuesFromProps", "createSvgRenderState", "props", "instance", "renderState", "latestValues", "frame", "buildSVGAttrs", "isSVGTag", "renderSVG", "htmlMotionConfig", "makeUseVisualState", "scrapeMotionValuesFromProps", "createHtmlRenderState", "createDomMotionConfig", "Component", "forwardMotionProps", "preloadedFeatures", "createVisualElement", "isSVGComponent", "svgMotionConfig", "htmlMotionConfig", "createUseRender", "addDomEvent", "target", "eventName", "handler", "options", "isPrimaryPointer", "event", "extractEventInfo", "event", "pointType", "addPointerInfo", "handler", "isPrimaryPointer", "addPointerEvent", "target", "eventName", "handler", "options", "addDomEvent", "addPointerInfo", "combineFunctions", "a", "b", "v", "pipe", "transformers", "createLock", "name", "lock", "openLock", "globalHorizontalLock", "globalVerticalLock", "getGlobalLock", "drag", "openHorizontal", "openVertical", "isDragActive", "openGestureLock", "Feature", "node", "addHoverEvent", "node", "isActive", "eventName", "callbackName", "handleEvent", "event", "info", "isDragActive", "props", "callback", "addPointerEvent", "HoverGesture", "Feature", "pipe", "FocusGesture", "Feature", "isFocusVisible", "pipe", "addDomEvent", "isNodeOrChild", "parent", "child", "fireSyntheticPointerEvent", "name", "handler", "syntheticPointerEvent", "extractEventInfo", "PressGesture", "Feature", "noop", "startEvent", "startInfo", "props", "removePointerUpListener", "addPointerEvent", "endEvent", "endInfo", "onTap", "onTapCancel", "globalTapTarget", "isNodeOrChild", "removePointerCancelListener", "cancelEvent", "cancelInfo", "pipe", "handleKeydown", "keydownEvent", "handleKeyup", "keyupEvent", "event", "info", "addDomEvent", "removeKeydownListener", "handleBlur", "removeBlurListener", "onTapStart", "whileTap", "isDragActive", "removePointerListener", "removeFocusListener", "observerCallbacks", "observers", "fireObserverCallback", "entry", "callback", "fireAllObserverCallbacks", "entries", "initIntersectionObserver", "root", "options", "lookupRoot", "rootObservers", "key", "observeIntersection", "element", "rootInteresectionObserver", "thresholdNames", "InViewFeature", "Feature", "viewport", "root", "rootMargin", "amount", "once", "options", "onIntersectionUpdate", "entry", "isIntersecting", "onViewportEnter", "onViewportLeave", "callback", "observeIntersection", "props", "prevProps", "hasViewportOptionChanged", "prevViewport", "name", "gestureAnimations", "InViewFeature", "PressGesture", "FocusGesture", "HoverGesture", "shallowCompare", "next", "prev", "prevLength", "i", "getCurrent", "visualElement", "current", "value", "key", "getVelocity", "velocity", "resolveVariant", "definition", "custom", "props", "resolveVariantFromProps", "secondsToMilliseconds", "seconds", "millisecondsToSeconds", "milliseconds", "underDampedSpring", "criticallyDampedSpring", "target", "keyframesTransition", "ease", "getDefaultTransition", "valueKey", "keyframes", "transformProps", "isTransitionDefined", "when", "_delay", "delayChildren", "staggerChildren", "staggerDirection", "repeat", "repeatType", "repeatDelay", "from", "elapsed", "transition", "getValueTransition", "key", "instantAnimationState", "isNotNull", "value", "getFinalKeyframe", "keyframes", "repeat", "repeatType", "finalKeyframe", "resolvedKeyframes", "index", "now", "clearTime", "time", "frameData", "MotionGlobalConfig", "newTime", "isZeroValueString", "v", "isNone", "value", "isZeroValueString", "warning", "noop", "invariant", "isNumericalString", "v", "splitCSSVariableRegex", "parseCSSVariable", "current", "match", "token1", "token2", "fallback", "maxDepth", "getVariableValue", "element", "depth", "invariant", "token", "resolved", "trimmed", "isNumericalString", "isCSSVariableToken", "positionalKeys", "isNumOrPxType", "v", "number", "px", "getPosFromMatrix", "matrix", "pos", "getTranslateFromMatrix", "pos2", "pos3", "_bbox", "transform", "matrix3d", "transformKeys", "nonTranslationalTransformKeys", "transformPropOrder", "key", "removeNonTranslationalTransform", "visualElement", "removedTransforms", "value", "positionalValues", "x", "paddingLeft", "paddingRight", "y", "paddingTop", "paddingBottom", "top", "left", "testValueType", "v", "type", "auto", "v", "dimensionValueTypes", "number", "px", "percent", "degrees", "vw", "vh", "auto", "findDimensionValueType", "v", "testValueType", "toResolve", "isScheduled", "anyNeedsMeasurement", "measureAllKeyframes", "resolversToMeasure", "resolver", "elementsToMeasure", "transformsToRestore", "element", "removedTransforms", "removeNonTranslationalTransform", "restore", "key", "value", "_a", "readAllKeyframes", "flushKeyframeResolvers", "KeyframeResolver", "unresolvedKeyframes", "onComplete", "name", "motionValue", "isAsync", "frame", "currentValue", "finalKeyframe", "valueAsRead", "isColorString", "type", "testProp", "v", "isString", "singleColorRegex", "splitColor", "aName", "bName", "cName", "a", "b", "c", "alpha", "floatRegex", "clampRgbUnit", "v", "clamp", "rgbUnit", "number", "rgba", "isColorString", "splitColor", "red", "green", "blue", "alpha$1", "sanitize", "alpha", "parseHex", "v", "r", "g", "b", "a", "hex", "isColorString", "rgba", "hsla", "isColorString", "splitColor", "hue", "saturation", "lightness", "alpha$1", "percent", "sanitize", "alpha", "color", "v", "rgba", "hex", "hsla", "isString", "test", "v", "_a", "_b", "isString", "floatRegex", "colorRegex", "NUMBER_TOKEN", "COLOR_TOKEN", "VAR_TOKEN", "VAR_FUNCTION_TOKEN", "SPLIT_TOKEN", "complexRegex", "analyseComplexValue", "value", "originalValue", "values", "indexes", "types", "split", "parsedValue", "color", "parseComplexValue", "createTransformer", "source", "numSections", "output", "i", "type", "sanitize", "convertNumbersToZero", "getAnimatableNone", "parsed", "complex", "maxDefaults", "applyDefaultFilter", "v", "name", "value", "number", "floatRegex", "unit", "defaultValue", "functionRegex", "filter", "complex", "functions", "defaultValueTypes", "numberValueTypes", "color", "filter", "getDefaultValueType", "key", "getAnimatableNone", "key", "value", "defaultValueType", "getDefaultValueType", "filter", "complex", "makeNoneKeyframesAnimatable", "unresolvedKeyframes", "noneKeyframeIndexes", "name", "i", "animatableTemplate", "noneIndex", "getAnimatableNone", "DOMKeyframesResolver", "KeyframeResolver", "unresolvedKeyframes", "onComplete", "name", "motionValue", "element", "i", "keyframe", "isCSSVariableToken", "resolved", "getVariableValue", "positionalKeys", "origin", "target", "originType", "findDimensionValueType", "targetType", "isNumOrPxType", "value", "noneKeyframeIndexes", "isNone", "makeNoneKeyframesAnimatable", "positionalValues", "measureKeyframe", "_a", "finalKeyframeIndex", "finalKeyframe", "unsetTransformName", "unsetTransformValue", "memo", "callback", "result", "isAnimatable", "value", "name", "complex", "hasKeyframesChanged", "keyframes", "current", "i", "canAnimate", "name", "type", "velocity", "originKeyframe", "targetKeyframe", "isOriginAnimatable", "isAnimatable", "isTargetAnimatable", "warning", "BaseAnimation", "autoplay", "delay", "type", "repeat", "repeatDelay", "repeatType", "options", "flushKeyframeResolvers", "keyframes", "finalKeyframe", "name", "velocity", "onComplete", "onUpdate", "isGenerator", "canAnimate", "instantAnimationState", "getFinalKeyframe", "resolvedAnimation", "resolve", "reject", "velocityPerSecond", "velocity", "frameDuration", "velocitySampleDuration", "calcGeneratorVelocity", "resolveValue", "t", "current", "prevT", "velocityPerSecond", "safeMin", "minDuration", "maxDuration", "minDamping", "maxDamping", "findSpring", "duration", "bounce", "velocity", "mass", "envelope", "derivative", "warning", "secondsToMilliseconds", "dampingRatio", "clamp", "millisecondsToSeconds", "undampedFreq", "exponentialDecay", "delta", "a", "b", "calcAngularFreq", "c", "d", "e", "f", "g", "initialGuess", "approximateRoot", "stiffness", "rootIterations", "result", "i", "durationKeys", "physicsKeys", "isSpringType", "options", "keys", "key", "getSpringOptions", "springOptions", "derived", "findSpring", "spring", "keyframes", "restDelta", "restSpeed", "origin", "target", "state", "stiffness", "damping", "mass", "duration", "velocity", "isResolvedFromDuration", "millisecondsToSeconds", "initialVelocity", "dampingRatio", "initialDelta", "undampedAngularFreq", "isGranularScale", "resolveSpring", "angularFreq", "calcAngularFreq", "t", "envelope", "dampedAngularFreq", "freqForT", "current", "currentVelocity", "calcGeneratorVelocity", "isBelowVelocityThreshold", "isBelowDisplacementThreshold", "inertia", "keyframes", "velocity", "power", "timeConstant", "bounceDamping", "bounceStiffness", "modifyTarget", "min", "max", "restDelta", "restSpeed", "origin", "state", "isOutOfBounds", "v", "nearestBoundary", "amplitude", "ideal", "target", "calcDelta", "t", "calcLatest", "applyFriction", "delta", "latest", "timeReachedBoundary", "spring$1", "checkCatchBoundary", "spring", "calcGeneratorVelocity", "hasUpdatedFrame", "calcBezier", "a1", "a2", "subdivisionPrecision", "subdivisionMaxIterations", "binarySubdivide", "x", "lowerBound", "upperBound", "mX1", "mX2", "currentX", "currentT", "i", "cubicBezier", "mY1", "mY2", "noop", "getTForX", "aX", "t", "easeIn", "cubicBezier", "easeOut", "easeInOut", "isEasingArray", "ease", "mirrorEasing", "easing", "p", "reverseEasing", "easing", "p", "circIn", "p", "circOut", "reverseEasing", "circInOut", "mirrorEasing", "backOut", "cubicBezier", "backIn", "reverseEasing", "backInOut", "mirrorEasing", "anticipate", "p", "backIn", "easingLookup", "noop", "easeIn", "easeInOut", "easeOut", "circIn", "circInOut", "circOut", "backIn", "backInOut", "backOut", "anticipate", "easingDefinitionToFunction", "definition", "invariant", "x1", "y1", "x2", "y2", "cubicBezier", "progress", "from", "to", "value", "toFromDifference", "mixNumber", "from", "to", "progress", "hueToRgb", "p", "q", "t", "hslaToRgba", "hue", "saturation", "lightness", "alpha", "red", "green", "blue", "mixLinearColor", "from", "to", "v", "fromExpo", "expo", "colorTypes", "hex", "rgba", "hsla", "getColorType", "type", "asRGBA", "color", "invariant", "model", "hslaToRgba", "mixColor", "fromRGBA", "toRGBA", "blended", "mixNumber", "mixImmediate", "a", "b", "p", "mixNumber", "getMixer", "isCSSVariableToken", "color", "mixColor", "mixComplex", "mixArray", "mixObject", "output", "numValues", "blendValue", "v", "i", "key", "matchOrder", "origin", "target", "_a", "orderedOrigin", "pointers", "type", "originIndex", "originValue", "template", "complex", "originStats", "analyseComplexValue", "targetStats", "pipe", "warning", "mix", "from", "to", "p", "mixNumber", "getMixer", "createMixers", "output", "ease", "customMixer", "mixers", "mixerFactory", "mix", "numMixers", "i", "mixer", "easingFunction", "noop", "pipe", "interpolate", "input", "isClamp", "inputLength", "invariant", "interpolator", "v", "progressInRange", "progress", "clamp", "fillOffset", "offset", "remaining", "min", "i", "offsetProgress", "progress", "mixNumber", "defaultOffset", "arr", "offset", "fillOffset", "convertOffsetToTimes", "offset", "duration", "o", "defaultEasing", "values", "easing", "easeInOut", "keyframes", "duration", "keyframeValues", "times", "ease", "easingFunctions", "isEasingArray", "easingDefinitionToFunction", "state", "absoluteTimes", "convertOffsetToTimes", "defaultOffset", "mapTimeToKeyframe", "interpolate", "t", "calcGeneratorDuration", "generator", "duration", "timeStep", "state", "frameloopDriver", "update", "passTimestamp", "timestamp", "frame", "cancelFrame", "frameData", "time", "generators", "inertia", "keyframes", "spring", "percentToProgress", "percent", "MainThreadAnimation", "BaseAnimation", "KeyframeResolver$1", "KeyframeResolver", "options", "onStop", "name", "motionValue", "onResolved", "resolvedKeyframes", "finalKeyframe", "keyframes$1", "type", "repeat", "repeatDelay", "repeatType", "velocity", "generatorFactory", "mapPercentToKeyframes", "mirroredGenerator", "pipe", "mix", "generator", "calcGeneratorDuration", "calculatedDuration", "resolvedDuration", "totalDuration", "autoplay", "timestamp", "sample", "resolved", "delay", "onUpdate", "timeWithoutDelay", "isInDelayPhase", "elapsed", "frameGenerator", "progress", "currentIteration", "iterationProgress", "clamp", "state", "done", "isAnimationFinished", "getFinalKeyframe", "millisecondsToSeconds", "newTime", "secondsToMilliseconds", "newSpeed", "hasChanged", "driver", "frameloopDriver", "onPlay", "now", "_a", "onComplete", "time", "isBezierDefinition", "easing", "isWaapiSupportedEasing", "easing", "supportedWaapiEasing", "isBezierDefinition", "cubicBezierAsString", "a", "b", "c", "d", "mapEasingToNativeEasingWithDefault", "mapEasingToNativeEasing", "animateStyle", "element", "valueName", "keyframes", "delay", "duration", "repeat", "repeatType", "ease", "times", "keyframeOptions", "easing", "mapEasingToNativeEasing", "supportsWaapi", "memo", "acceleratedValues", "sampleDelta", "maxDuration", "requiresPregeneratedKeyframes", "options", "isWaapiSupportedEasing", "pregenerateKeyframes", "keyframes", "sampleAnimation", "MainThreadAnimation", "state", "pregeneratedKeyframes", "t", "AcceleratedAnimation", "BaseAnimation", "name", "motionValue", "DOMKeyframesResolver", "resolvedKeyframes", "finalKeyframe", "_a", "duration", "times", "ease", "type", "onComplete", "onUpdate", "pregeneratedAnimation", "animation", "animateStyle", "time", "getFinalKeyframe", "resolved", "millisecondsToSeconds", "newTime", "secondsToMilliseconds", "newSpeed", "timeline", "noop", "sampleTime", "repeatDelay", "repeatType", "damping", "animateMotionValue", "name", "value", "target", "transition", "element", "isHandoff", "onComplete", "valueTransition", "getValueTransition", "delay", "elapsed", "secondsToMilliseconds", "options", "v", "isTransitionDefined", "getDefaultTransition", "shouldSkip", "instantAnimationState", "MotionGlobalConfig", "finalKeyframe", "getFinalKeyframe", "frame", "AcceleratedAnimation", "MainThreadAnimation", "isWillChangeMotionValue", "value", "isMotionValue", "addUniqueItem", "arr", "item", "removeItem", "index", "SubscriptionManager", "handler", "addUniqueItem", "removeItem", "a", "b", "c", "numSubscriptions", "MAX_VELOCITY_DELTA", "isFloat", "value", "collectMotionValues", "MotionValue", "init", "options", "v", "render", "currentTime", "time", "current", "prevFrameValue", "subscription", "eventName", "callback", "SubscriptionManager", "unsubscribe", "frame", "eventManagers", "passiveEffect", "stopPassiveEffect", "prev", "delta", "endAnimation", "velocityPerSecond", "startAnimation", "resolve", "motionValue", "setMotionValue", "visualElement", "key", "value", "motionValue", "setTarget", "definition", "resolved", "resolveVariant", "transitionEnd", "transition", "target", "resolveFinalValueInKeyframes", "shouldBlockAnimation", "protectedKeys", "needsAnimating", "key", "shouldBlock", "animateTarget", "visualElement", "targetAndTransition", "delay", "transitionOverride", "type", "_a", "transition", "transitionEnd", "target", "willChange", "animations", "animationTypeState", "value", "valueTarget", "valueTransition", "getValueTransition", "isHandoff", "appearId", "optimizedAppearDataAttribute", "elapsed", "animateMotionValue", "transformProps", "animation", "isWillChangeMotionValue", "frame", "setTarget", "animateVariant", "visualElement", "variant", "options", "_a", "resolved", "resolveVariant", "transition", "getAnimation", "animateTarget", "getChildAnimations", "forwardDelay", "delayChildren", "staggerChildren", "staggerDirection", "animateChildren", "when", "first", "last", "animations", "maxStaggerDuration", "generateStaggerDuration", "i", "sortByTreeOrder", "child", "a", "b", "animateVisualElement", "visualElement", "definition", "options", "animation", "animations", "variant", "animateVariant", "resolvedDefinition", "resolveVariant", "animateTarget", "frame", "reversePriorityOrder", "variantPriorityOrder", "numAnimationTypes", "animateList", "visualElement", "animations", "animation", "options", "animateVisualElement", "createAnimationState", "animate", "state", "createState", "isInitialRender", "buildResolvedTypeValues", "type", "acc", "definition", "_a", "resolved", "resolveVariant", "transition", "transitionEnd", "target", "setAnimateFunction", "makeAnimator", "animateChanges", "changedActiveType", "props", "context", "removedKeys", "encounteredKeys", "removedVariantIndex", "i", "typeState", "prop", "propIsVariant", "isVariantLabel", "activeDelta", "isInherited", "isAnimationControls", "shouldAnimateType", "checkVariantsDidChange", "handledRemovedValues", "definitionList", "resolvedValues", "prevResolvedValues", "allKeys", "markToAnimate", "key", "motionValue", "next", "prev", "valueHasChanged", "isKeyframesTarget", "shallowCompare", "fallbackAnimation", "fallbackTarget", "shouldAnimate", "setActive", "isActive", "child", "createTypeState", "AnimationFeature", "Feature", "node", "createAnimationState", "animate", "isAnimationControls", "prevAnimate", "id", "ExitAnimationFeature", "Feature", "isPresent", "onExitComplete", "prevIsPresent", "exitAnimation", "register", "animations", "AnimationFeature", "ExitAnimationFeature", "createAxis", "createBox", "convertBoundingBoxToBox", "top", "left", "right", "bottom", "transformBoxPoints", "point", "transformPoint", "topLeft", "bottomRight", "measureViewportBox", "instance", "transformPoint", "convertBoundingBoxToBox", "transformBoxPoints", "import_react", "prefersReducedMotion", "hasReducedMotionListener", "initPrefersReducedMotion", "hasReducedMotionListener", "isBrowser", "motionMediaQuery", "setReducedMotionPreferences", "prefersReducedMotion", "updateMotionValuesFromProps", "element", "next", "prev", "willChange", "key", "nextValue", "prevValue", "isMotionValue", "isWillChangeMotionValue", "motionValue", "existingValue", "latestValue", "visualElementStore", "valueTypes", "dimensionValueTypes", "color", "complex", "findValueType", "v", "testValueType", "featureNames", "featureDefinitions", "numFeatures", "propEventHandlers", "numVariantProps", "variantProps", "getClosestProjectingNode", "visualElement", "VisualElement", "_props", "_prevProps", "_visualElement", "parent", "props", "presenceContext", "reducedMotionConfig", "blockInitialAnimation", "visualState", "options", "keyframes", "onComplete", "name", "value", "KeyframeResolver", "frame", "latestValues", "renderState", "isControllingVariants", "isVariantNode", "willChange", "initialMotionValues", "key", "isMotionValue", "isWillChangeMotionValue", "instance", "visualElementStore", "hasReducedMotionListener", "initPrefersReducedMotion", "prefersReducedMotion", "_a", "cancelFrame", "remove", "valueIsTransform", "transformProps", "removeOnChange", "latestValue", "removeOnRenderRequest", "other", "children", "renderedProps", "isStrict", "preloadedFeatures", "initialLayoutGroupConfig", "ProjectionNodeConstructor", "MeasureLayout", "i", "isEnabled", "FeatureConstructor", "ProjectionNode", "MeasureLayoutComponent", "layoutId", "layout", "drag", "dragConstraints", "layoutScroll", "layoutRoot", "isRefObject", "feature", "createBox", "listenerName", "listener", "updateMotionValuesFromProps", "startAtParent", "context", "prop", "isVariantLabel", "child", "closestVariantNode", "existingValue", "unsubscribe", "defaultValue", "motionValue", "target", "isNumericalString", "isZeroValueString", "findValueType", "complex", "getAnimatableNone", "initial", "valueFromInitial", "variant", "resolveVariantFromProps", "eventName", "callback", "SubscriptionManager", "args", "DOMVisualElement", "VisualElement", "DOMKeyframesResolver", "a", "b", "props", "key", "vars", "style", "getComputedStyle", "element", "HTMLVisualElement", "DOMVisualElement", "instance", "key", "transformProps", "defaultType", "getDefaultValueType", "computedStyle", "value", "isCSSVariableName", "transformPagePoint", "measureViewportBox", "renderState", "latestValues", "options", "props", "buildHTMLStyles", "prevProps", "visualElement", "scrapeMotionValuesFromProps", "children", "isMotionValue", "latest", "styleProp", "projection", "renderHTML", "SVGVisualElement", "DOMVisualElement", "props", "key", "instance", "transformProps", "defaultType", "getDefaultValueType", "camelCaseAttributes", "camelToDash", "createBox", "prevProps", "visualElement", "scrapeMotionValuesFromProps", "renderState", "latestValues", "options", "buildSVGAttrs", "styleProp", "projection", "renderSVG", "isSVGTag", "createDomVisualElement", "Component", "options", "isSVGComponent", "SVGVisualElement", "HTMLVisualElement", "m", "createMotionProxy", "createDomMotionConfig", "import_jsx_runtime", "import_react", "import_react", "import_react", "useIsMounted", "isMounted", "useIsomorphicLayoutEffect", "useForceUpdate", "isMounted", "useIsMounted", "forcedRenderCount", "setForcedRenderCount", "forceRender", "frame", "import_jsx_runtime", "React", "import_react", "import_jsx_runtime", "React", "import_react", "PopChildMeasure", "prevProps", "element", "size", "PopChild", "children", "isPresent", "id", "ref", "nonce", "MotionConfigContext", "width", "height", "top", "left", "style", "PresenceChild", "children", "initial", "isPresent", "onExitComplete", "custom", "presenceAffectsLayout", "mode", "presenceChildren", "useConstant", "newChildrenMap", "id", "context", "childId", "isComplete", "_", "key", "PopChild", "PresenceContext", "import_react", "useUnmountEffect", "callback", "getChildKey", "child", "updateChildLookup", "children", "allChildren", "key", "onlyElements", "filtered", "AnimatePresence", "custom", "initial", "onExitComplete", "exitBeforeEnter", "presenceAffectsLayout", "mode", "invariant", "forceRender", "LayoutGroupContext", "useForceUpdate", "isMounted", "useIsMounted", "filteredChildren", "childrenToRender", "exitingChildren", "presentChildren", "isInitialRender", "useIsomorphicLayoutEffect", "useUnmountEffect", "PresenceChild", "presentKeys", "targetKeys", "numPresent", "i", "component", "insertionIndex", "exitingComponent", "leftOverKeys", "childKey", "leftOverKey", "presentChild", "presentChildKey", "import_jsx_runtime", "import_react", "LazyMotion", "children", "features", "strict", "setIsLoaded", "isLazyBundle", "loadedRenderer", "renderer", "loadedFeatures", "loadFeatures", "LazyContext", "domAnimation", "createDomVisualElement", "animations", "gestureAnimations", "import_jsx_runtime", "Ripple", "props", "ripples", "motionProps", "color", "style", "onClear", "ripple", "duration", "clamp", "AnimatePresence", "LazyMotion", "domAnimation", "m", "ripple_default", "import_react", "useRipple", "props", "ripples", "setRipples", "onClick", "event", "trigger", "size", "rect", "prevRipples", "getUniqueID", "onClear", "key", "prevState", "ripple", "useButton", "props", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "groupContext", "useButtonGroupContext", "isInGroup", "ref", "as", "children", "startContentProp", "endContentProp", "autoFocus", "className", "spinner", "fullWidth", "size", "color", "variant", "disableAnimation", "radius", "disableRipple", "isDisabledProp", "isIconOnly", "isLoading", "spinnerPlacement", "onPress", "onClick", "otherProps", "Component", "shouldFilterDOMProps", "domRef", "useDOMRef", "isFocusVisible", "isFocused", "focusProps", "$f7dceffc5ad7768b$export$4e328f61c538687f", "isDisabled", "styles", "button", "onRippleClickHandler", "onClearRipple", "ripples", "useRipple", "handleClick", "e", "ariaButtonProps", "isPressed", "useAriaButton", "$ff5963eb1fccf552$export$e08e3b67e392101e", "isHovered", "hoverProps", "$6179b936705e76d3$export$ae780daf29e6d456", "getButtonProps", "props2", "dataAttr", "$3ef42575df84b30b$export$9d1611c77c2fe928", "filterDOMProps", "getIconClone", "icon", "startContent", "endContent", "spinnerSize", "getRippleProps", "import_react", "useSpinner", "originalProps", "props", "variantProps", "mapPropsVariants", "spinner", "children", "className", "classNames", "labelProp", "otherProps", "slots", "objectToDeps", "baseStyles", "clsx", "label", "ariaLabel", "getSpinnerProps", "import_jsx_runtime", "Spinner", "forwardRef", "props", "ref", "slots", "classNames", "label", "getSpinnerProps", "useSpinner", "spinner_default", "import_jsx_runtime", "Button", "forwardRef", "props", "ref", "Component", "domRef", "children", "styles", "spinnerSize", "spinner", "spinner_default", "spinnerPlacement", "startContent", "endContent", "isLoading", "disableRipple", "getButtonProps", "getRippleProps", "isIconOnly", "useButton", "ripple_default", "button_default"]
}
