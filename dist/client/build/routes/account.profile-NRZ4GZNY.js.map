{
  "version": 3,
  "sources": ["../../../../app/routes/account.profile.tsx"],
  "sourcesContent": ["import type {CustomerFragment} from 'customer-accountapi.generated';\nimport type {CustomerUpdateInput} from '@shopify/hydrogen/customer-account-api-types';\nimport {CUSTOMER_UPDATE_MUTATION} from '~/graphql/customer-account/CustomerUpdateMutation';\nimport {\n  json,\n  redirect,\n  type ActionFunctionArgs,\n  type LoaderFunctionArgs,\n} from '@shopify/remix-oxygen';\nimport {\n  Form,\n  useActionData,\n  useNavigation,\n  useOutletContext,\n  type MetaFunction,\n} from '@remix-run/react';\n\nexport type ActionResponse = {\n  error: string | null;\n  customer: CustomerFragment | null;\n};\n\nexport const meta: MetaFunction = () => {\n  return [{title: 'Profile'}];\n};\n\nexport async function loader({context}: LoaderFunctionArgs) {\n  await context.customerAccount.handleAuthStatus();\n\n  return json(\n    {},\n    {\n      headers: {\n        'Set-Cookie': await context.session.commit(),\n      },\n    },\n  );\n}\n\nexport async function action({request, context}: ActionFunctionArgs) {\n  const {customerAccount} = context;\n\n  if (request.method !== 'PUT') {\n    return json({error: 'Method not allowed'}, {status: 405});\n  }\n\n  const form = await request.formData();\n\n  try {\n    const customer: CustomerUpdateInput = {};\n    const validInputKeys = ['firstName', 'lastName'] as const;\n    for (const [key, value] of form.entries()) {\n      if (!validInputKeys.includes(key as any)) {\n        continue;\n      }\n      if (typeof value === 'string' && value.length) {\n        customer[key as (typeof validInputKeys)[number]] = value;\n      }\n    }\n\n    // update customer and possibly password\n    const {data, errors} = await customerAccount.mutate(\n      CUSTOMER_UPDATE_MUTATION,\n      {\n        variables: {\n          customer,\n        },\n      },\n    );\n\n    if (errors?.length) {\n      throw new Error(errors[0].message);\n    }\n\n    if (!data?.customerUpdate?.customer) {\n      throw new Error('Customer profile update failed.');\n    }\n\n    return json(\n      {\n        error: null,\n        customer: data?.customerUpdate?.customer,\n      },\n      {\n        headers: {\n          'Set-Cookie': await context.session.commit(),\n        },\n      },\n    );\n  } catch (error: any) {\n    return json(\n      {error: error.message, customer: null},\n      {\n        status: 400,\n        headers: {\n          'Set-Cookie': await context.session.commit(),\n        },\n      },\n    );\n  }\n}\n\nexport default function AccountProfile() {\n  const account = useOutletContext<{customer: CustomerFragment}>();\n  const {state} = useNavigation();\n  const action = useActionData<ActionResponse>();\n  const customer = action?.customer ?? account?.customer;\n\n  return (\n    <div className=\"account-profile\">\n      <h2>My profile</h2>\n      <br />\n      <Form method=\"PUT\">\n        <legend>Personal information</legend>\n        <fieldset>\n          <label htmlFor=\"firstName\">First name</label>\n          <input\n            id=\"firstName\"\n            name=\"firstName\"\n            type=\"text\"\n            autoComplete=\"given-name\"\n            placeholder=\"First name\"\n            aria-label=\"First name\"\n            defaultValue={customer.firstName ?? ''}\n            minLength={2}\n          />\n          <label htmlFor=\"lastName\">Last name</label>\n          <input\n            id=\"lastName\"\n            name=\"lastName\"\n            type=\"text\"\n            autoComplete=\"family-name\"\n            placeholder=\"Last name\"\n            aria-label=\"Last name\"\n            defaultValue={customer.lastName ?? ''}\n            minLength={2}\n          />\n        </fieldset>\n        {action?.error ? (\n          <p>\n            <mark>\n              <small>{action.error}</small>\n            </mark>\n          </p>\n        ) : (\n          <br />\n        )}\n        <button type=\"submit\" disabled={state !== 'idle'}>\n          {state !== 'idle' ? 'Updating' : 'Update'}\n        </button>\n      </Form>\n    </div>\n  );\n}\n"],
  "mappings": "yWASAA,IAqGM,IAAAC,EAAA,OAxFOC,EAAqB,IACzB,CAAC,CAAC,MAAO,SAAS,CAAC,EA+Eb,SAARC,GAAkC,CACvC,IAAMC,EAAUC,EAA+C,EACzD,CAAC,MAAAC,CAAK,EAAIC,EAAc,EACxBC,EAASC,EAA8B,EACvCC,EAAWF,GAAQ,UAAYJ,GAAS,SAE9C,SACE,QAAC,OAAI,UAAU,kBACb,oBAAC,MAAG,sBAAU,KACd,OAAC,OAAG,KACJ,QAACO,EAAA,CAAK,OAAO,MACX,oBAAC,UAAO,gCAAoB,KAC5B,QAAC,YACC,oBAAC,SAAM,QAAQ,YAAY,sBAAU,KACrC,OAAC,SACC,GAAG,YACH,KAAK,YACL,KAAK,OACL,aAAa,aACb,YAAY,aACZ,aAAW,aACX,aAAcD,EAAS,WAAa,GACpC,UAAW,EACb,KACA,OAAC,SAAM,QAAQ,WAAW,qBAAS,KACnC,OAAC,SACC,GAAG,WACH,KAAK,WACL,KAAK,OACL,aAAa,cACb,YAAY,YACZ,aAAW,YACX,aAAcA,EAAS,UAAY,GACnC,UAAW,EACb,GACF,EACCF,GAAQ,SACP,OAAC,KACC,mBAAC,QACC,mBAAC,SAAO,SAAAA,EAAO,MAAM,EACvB,EACF,KAEA,OAAC,OAAG,KAEN,OAAC,UAAO,KAAK,SAAS,SAAUF,IAAU,OACvC,SAAAA,IAAU,OAAS,WAAa,SACnC,GACF,GACF,CAEJ",
  "names": ["init_esm", "import_jsx_runtime", "meta", "AccountProfile", "account", "useOutletContext", "state", "useNavigation", "action", "useActionData", "customer", "Form"]
}
