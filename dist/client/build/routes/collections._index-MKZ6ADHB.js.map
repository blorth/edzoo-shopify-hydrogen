{
  "version": 3,
  "sources": ["../../../../app/routes/collections._index.tsx"],
  "sourcesContent": ["import {useLoaderData, Link} from '@remix-run/react';\nimport {json, type LoaderFunctionArgs} from '@shopify/remix-oxygen';\nimport {Pagination, getPaginationVariables, Image} from '@shopify/hydrogen';\nimport type {CollectionFragment} from 'storefrontapi.generated';\n\nexport async function loader({context, request}: LoaderFunctionArgs) {\n  const paginationVariables = getPaginationVariables(request, {\n    pageBy: 4,\n  });\n\n  const {collections} = await context.storefront.query(COLLECTIONS_QUERY, {\n    variables: paginationVariables,\n  });\n\n  return json({collections});\n}\n\nexport default function Collections() {\n  const {collections} = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"collections\">\n      <h1>Collections</h1>\n      <Pagination connection={collections}>\n        {({nodes, isLoading, PreviousLink, NextLink}) => (\n          <div>\n            <PreviousLink>\n              {isLoading ? 'Loading...' : <span>\u2191 Load previous</span>}\n            </PreviousLink>\n            <CollectionsGrid collections={nodes} />\n            <NextLink>\n              {isLoading ? 'Loading...' : <span>Load more \u2193</span>}\n            </NextLink>\n          </div>\n        )}\n      </Pagination>\n    </div>\n  );\n}\n\nfunction CollectionsGrid({collections}: {collections: CollectionFragment[]}) {\n  return (\n    <div className=\"collections-grid\">\n      {collections.map((collection, index) => (\n        <CollectionItem\n          key={collection.id}\n          collection={collection}\n          index={index}\n        />\n      ))}\n    </div>\n  );\n}\n\nfunction CollectionItem({\n  collection,\n  index,\n}: {\n  collection: CollectionFragment;\n  index: number;\n}) {\n  return (\n    <Link\n      className=\"collection-item\"\n      key={collection.id}\n      to={`/collections/${collection.handle}`}\n      prefetch=\"intent\"\n    >\n      {collection?.image && (\n        <Image\n          alt={collection.image.altText || collection.title}\n          aspectRatio=\"1/1\"\n          data={collection.image}\n          loading={index < 3 ? 'eager' : undefined}\n        />\n      )}\n      <h5>{collection.title}</h5>\n    </Link>\n  );\n}\n\nconst COLLECTIONS_QUERY = `#graphql\n  fragment Collection on Collection {\n    id\n    title\n    handle\n    image {\n      id\n      url\n      altText\n      width\n      height\n    }\n  }\n  query StoreCollections(\n    $country: CountryCode\n    $endCursor: String\n    $first: Int\n    $language: LanguageCode\n    $last: Int\n    $startCursor: String\n  ) @inContext(country: $country, language: $language) {\n    collections(\n      first: $first,\n      last: $last,\n      before: $startCursor,\n      after: $endCursor\n    ) {\n      nodes {\n        ...Collection\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n` as const;\n"],
  "mappings": "idAAAA,IAsBM,IAAAC,EAAA,OALS,SAARC,GAA+B,CACpC,GAAM,CAAC,YAAAC,CAAW,EAAIC,EAA6B,EAEnD,SACE,QAAC,OAAI,UAAU,cACb,oBAAC,MAAG,uBAAW,KACf,OAACC,EAAA,CAAW,WAAYF,EACrB,UAAC,CAAC,MAAAG,EAAO,UAAAC,EAAW,aAAAC,EAAc,SAAAC,CAAQ,OACzC,QAAC,OACC,oBAACD,EAAA,CACE,SAAAD,EAAY,gBAAe,OAAC,QAAK,gCAAe,EACnD,KACA,OAACG,EAAA,CAAgB,YAAaJ,EAAO,KACrC,OAACG,EAAA,CACE,SAAAF,EAAY,gBAAe,OAAC,QAAK,4BAAW,EAC/C,GACF,EAEJ,GACF,CAEJ,CAEA,SAASG,EAAgB,CAAC,YAAAP,CAAW,EAAwC,CAC3E,SACE,OAAC,OAAI,UAAU,mBACZ,SAAAA,EAAY,IAAI,CAACQ,EAAYC,OAC5B,OAACC,EAAA,CAEC,WAAYF,EACZ,MAAOC,GAFFD,EAAW,EAGlB,CACD,EACH,CAEJ,CAEA,SAASE,EAAe,CACtB,WAAAF,EACA,MAAAC,CACF,EAGG,CACD,SACE,QAACE,EAAA,CACC,UAAU,kBAEV,GAAI,gBAAgBH,EAAW,SAC/B,SAAS,SAER,UAAAA,GAAY,UACX,OAACI,EAAA,CACC,IAAKJ,EAAW,MAAM,SAAWA,EAAW,MAC5C,YAAY,MACZ,KAAMA,EAAW,MACjB,QAASC,EAAQ,EAAI,QAAU,OACjC,KAEF,OAAC,MAAI,SAAAD,EAAW,MAAM,IAZjBA,EAAW,EAalB,CAEJ",
  "names": ["init_esm", "import_jsx_runtime", "Collections", "collections", "useLoaderData", "Sr", "nodes", "isLoading", "PreviousLink", "NextLink", "CollectionsGrid", "collection", "index", "CollectionItem", "Link", "Image"]
}
