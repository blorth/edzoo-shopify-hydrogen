{
  "version": 3,
  "sources": ["../../../../app/routes/_index.tsx"],
  "sourcesContent": ["import {defer, type LoaderFunctionArgs} from '@shopify/remix-oxygen';\nimport {Await, useLoaderData, Link, type MetaFunction} from '@remix-run/react';\nimport {Suspense} from 'react';\nimport {Image, Money} from '@shopify/hydrogen';\nimport type {\n  FeaturedCollectionFragment,\n  RecommendedProductsQuery,\n} from 'storefrontapi.generated';\nimport ProductCard from '~/components/ProductCard';\n\nexport const meta: MetaFunction = () => {\n  return [{title: 'Hydrogen | Home'}];\n};\n\nexport async function loader({context}: LoaderFunctionArgs) {\n  const {storefront} = context;\n  const {collections} = await storefront.query(FEATURED_COLLECTION_QUERY);\n  const featuredCollection = collections.nodes[0];\n  const recommendedProducts = storefront.query(RECOMMENDED_PRODUCTS_QUERY);\n\n  return defer({featuredCollection, recommendedProducts});\n}\n\nexport default function Homepage() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"home\">\n      <FeaturedCollection collection={data.featuredCollection} />\n      <RecommendedProducts products={data.recommendedProducts} />\n    </div>\n  );\n}\n\nfunction FeaturedCollection({\n  collection,\n}: {\n  collection: FeaturedCollectionFragment;\n}) {\n  if (!collection) return null;\n  const image = collection?.image;\n  return (\n    <Link\n      className=\"featured-collection\"\n      to={`/collections/${collection.handle}`}\n    >\n      {image && (\n        <div className=\"featured-collection-image\">\n          <Image data={image} sizes=\"100vw\" />\n        </div>\n      )}\n      <h1>{collection.title}</h1>\n    </Link>\n  );\n}\n\nfunction RecommendedProducts({\n  products,\n}: {\n  products: Promise<RecommendedProductsQuery>;\n}) {\n  return (\n    <div className=\"recommended-products\">\n      <h2>Recommended Products</h2>\n      <div className=\"flex flex-col\">\n        <Suspense fallback={<div>Loading...</div>}>\n          <Await resolve={products}>\n            {({products}) => (\n              <div className=\"recommended-products-grid flex flex-col gap-10 lg:flex-row\">\n                {products.nodes.map((product, index) => {\n                  return (\n                    <ProductCard\n                      product={product}\n                      key={product.id}\n                      isSelected={index === 3}\n                    />\n                  );\n                })}\n              </div>\n            )}\n          </Await>\n        </Suspense>\n      </div>\n      <br />\n    </div>\n  );\n}\n\nconst FEATURED_COLLECTION_QUERY = `#graphql\n  fragment FeaturedCollection on Collection {\n    id\n    title\n    image {\n      id\n      url\n      altText\n      width\n      height\n    }\n    handle\n  }\n  query FeaturedCollection($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    collections(first: 1, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...FeaturedCollection\n      }\n    }\n  }\n` as const;\n\nconst RECOMMENDED_PRODUCTS_QUERY = `#graphql\n  fragment RecommendedProduct on Product {\n    id\n    title\n    handle\n    productType\n    priceRange {\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    images(first: 1) {\n      nodes {\n        id\n        url\n        altText\n        width\n        height\n      }\n    }\n    availableForSale\n    totalInventory\n    description\n  }\n  query RecommendedProducts ($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    products(first: 4, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...RecommendedProduct\n      }\n    }\n  }\n` as const;\n"],
  "mappings": "g3BACAA,IACA,IAAAC,EAAuB,OAyBnB,IAAAC,EAAA,OAjBSC,EAAqB,IACzB,CAAC,CAAC,MAAO,iBAAiB,CAAC,EAYrB,SAARC,GAA4B,CACjC,IAAMC,EAAOC,EAA6B,EAE1C,SACE,QAAC,OAAI,UAAU,OACb,oBAACC,EAAA,CAAmB,WAAYF,EAAK,mBAAoB,KACzD,OAACG,EAAA,CAAoB,SAAUH,EAAK,oBAAqB,GAC3D,CAEJ,CAEA,SAASE,EAAmB,CAC1B,WAAAE,CACF,EAEG,CACD,GAAI,CAACA,EAAY,OAAO,KACxB,IAAMC,EAAQD,GAAY,MAC1B,SACE,QAACE,EAAA,CACC,UAAU,sBACV,GAAI,gBAAgBF,EAAW,SAE9B,UAAAC,MACC,OAAC,OAAI,UAAU,4BACb,mBAACE,EAAA,CAAM,KAAMF,EAAO,MAAM,QAAQ,EACpC,KAEF,OAAC,MAAI,SAAAD,EAAW,MAAM,GACxB,CAEJ,CAEA,SAASD,EAAoB,CAC3B,SAAAK,CACF,EAEG,CACD,SACE,QAAC,OAAI,UAAU,uBACb,oBAAC,MAAG,gCAAoB,KACxB,OAAC,OAAI,UAAU,gBACb,mBAAC,YAAS,YAAU,OAAC,OAAI,sBAAU,EACjC,mBAACC,EAAA,CAAM,QAASD,EACb,UAAC,CAAC,SAAAA,CAAQ,OACT,OAAC,OAAI,UAAU,6DACZ,SAAAA,EAAS,MAAM,IAAI,CAACE,EAASC,OAE1B,OAACC,EAAA,CACC,QAASF,EAET,WAAYC,IAAU,GADjBD,EAAQ,EAEf,CAEH,EACH,EAEJ,EACF,EACF,KACA,OAAC,OAAG,GACN,CAEJ",
  "names": ["init_esm", "import_react", "import_jsx_runtime", "meta", "Homepage", "data", "useLoaderData", "FeaturedCollection", "RecommendedProducts", "collection", "image", "Link", "Image", "products", "Await", "product", "index", "ProductCard_default"]
}
